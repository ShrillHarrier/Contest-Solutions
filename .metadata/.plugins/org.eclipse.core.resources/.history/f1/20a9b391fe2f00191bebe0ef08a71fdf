import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		int reads = sc.nextInt();
		
		HashMap<Integer, Integer> freq = new HashMap<Integer, Integer>();
		
		for(int i = 0; i < reads; i++) {
			
			int temp = sc.nextInt();
			
			if(freq.containsKey(temp) == false) {
			freq.put(temp, 1);
			}
			else {
				freq.put(temp, freq.get(temp) + 1);
			}
		}
		
		Object[] values = freq.values().toArray();
		Object[] keys = freq.keySet().toArray();
		
		Arrays.sort(values);
		Arrays.sort(keys);
		
		int higher = (int) values[values.length-1];
		int lower = (int) values[values.length-2];
		
		int lowkey1 = 0;
		int lowkey2 = 0;
		
		int highkey1 = 0;
		int highkey2 = 0;
		
		boolean found1 = false;
		boolean found2 = false;
		
		System.out.println(freq);
		
		for(int i = keys.length - 1; i > -1; i--) {
			System.out.println(keys[i]);
			if(freq.get(keys[i]) == higher && found1 == false) {
					for(int j = i - 1; j > -1; j--) {
						if(freq.get(keys[j]) == higher) {
							lowkey1 = (int) keys[j];
							System.out.println("lowkey1: " + lowkey1);
						}
					}
						for(int j = i + 1; j < keys.length; j++) {
							if(freq.get(keys[j]) == higher) {
								highkey1 = (int) keys[j];
								System.out.println("highkey1: " + highkey1);
						}
					}
				found1 = true;
			}
			else if(freq.get(keys[i]) == lower && found2 == false) {
					for(int j = i - 1; j > -1; j--) {
						if(freq.get(keys[j]) == lower) {
							lowkey2 = (int) keys[j];
							System.out.println("lowkey2: " + lowkey2);
						}
				}
						for(int j = i + 1; j < keys.length; j++) {
							if(freq.get(keys[j]) == lower) {
								highkey2 = (int) keys[j];
								System.out.println("highkey2: " + highkey2);
						}
				}
				found2 = true;
				//System.out.println("found l");
			}
			if(found1 == true && found2 == true) {
				break;
			}
		}
		
		int[] list = {Math.abs(lowkey1-lowkey2), Math.abs(lowkey1-highkey2), Math.abs(highkey1-lowkey2), Math.abs(highkey1-highkey2)};
		
		Arrays.sort(list);
		
		System.out.println(list[3]);

	}

}
